# Import models from books_app
>>> from books_app.models import *

# Create 5 Books 
>>> book1 = Book.objects.create(title = "C Sharp")
>>> book2 = Book.objects.create(title = "Java")
>>> book3 = Book.objects.create(title = "Python")
>>> book4 = Book.objects.create(title = "PHP")
>>> book5 = Book.objects.create(title = "Ruby")
>>> Book.objects.all()
<QuerySet [<Book: Book object (1)>, <Book: Book object (2)>, <Book: Book object (3)>, <Book: Book object (4)>, <Book: Book object (5)>]>

# Create 5 Authors
>>> author1 = Author.objects.create(first_name = "Jane", last_name = "Austen")
>>> author2 = Author.objects.create(first_name = "Emily", last_name = "Dickinson")
>>> author3 = Author.objects.create(first_name = "Fryodor", last_name = "Dustoevsky")
>>> author4 = Author.objects.create(first_name = "William", last_name = "Shakespeare")
>>> author5 = Author.objects.create(first_name = "Lou", last_name = "Tzu")
>>> Author.objects.all()
<QuerySet [<Author: Author object (1)>, <Author: Author object (2)>, <Author: Author object (3)>, <Author: Author object (4)>, <Author: Author object (5)>]>
>>> exit
Use exit() or Ctrl-D (i.e. EOF) to exit
>>> exit()

# Make migrations after adding a note text field to the Author class
(djangoPy3Env) danicas-MacBook-Pro-2:authors_books danicasmith$ python manage.py makemigrations
You are trying to add a non-nullable field 'notes' to author without a default; we can't do that (the database needs something to populate existing rows).
Please select a fix:
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
 2) Quit, and let me add a default in models.py
Select an option: 1
Please enter the default value now, as valid Python
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now
Type 'exit' to exit this prompt
>>> new_text 
Invalid input: name 'new_text' is not defined
>>> "new_text"
Migrations for 'books_app':
  books_app/migrations/0002_author_notes.py
    - Add field notes to author
(djangoPy3Env) danicas-MacBook-Pro-2:authors_books danicasmith$ python manage.py migrate
Operations to perform:
  Apply all migrations: admin, auth, books_app, contenttypes, sessions
Running migrations:
  Applying books_app.0002_author_notes... OK
  # Run the shell
(djangoPy3Env) danicas-MacBook-Pro-2:authors_books danicasmith$ python manage.py shell
Python 3.8.5 (default, Jul 21 2020, 10:48:26) 
[Clang 11.0.3 (clang-1103.0.32.62)] on darwin
Type "help", "copyright", "credits" or "license" for more information.
(InteractiveConsole)
Import back the models file from books_app
>>> from books_app.models import *
# Change the name of Author 1
>>> c = Book.objects.get(id=1)
>>> c.title = "C#"
>>> c.save()

# Change the first_name of the first Author
>>> c = Author.objects.get(id=4)
>>> c.first_name = "Bill"
>>> c.save()

# Assign first author to first two books
>>> book1.authors.add(author1)
>>> book2.authors.add(author1)

# Assign the second author to the first 3 books
>>> book1.authors.add(author2)
>>> book2.authors.add(author2)
>>> book3.authors.add(author2)

Assign the third author to the first 4 books
>>> book1.authors.add(author3)
>>> book2.authors.add(author3)
>>> book3.authors.add(author3)
>>> book4.authors.add(author3)

Assign the fourth author to all 5 books
>>> book1.authors.add(author4)
>>> book2.authors.add(author4)
>>> book3.authors.add(author4)
>>> book4.authors.add(author4)
>>> book5.authors.add(author4)

Get all authors for the third book
>>> book3.authors.all()

Remove the first author of the third book
>>> book3.authors.remove(author2)

Add the fifth author to the second book
>>> book2.authors.add(author5)

Get all books the third author is a part of
>>> author3.books.all()

Find all authors of the fifth book
>>> book5.authors.all()